{
    "case_name": "test_input_coverage",
    "run_time": "20240523 17:11:22",
    "test_type": "MiniTaintCoverageTest",
    "case_doc": null,
    "success": true,
    "failures": "",
    "errors": "",
    "start_timestamp": 1716498682.8229694,
    "is_failure": false,
    "is_error": false,
    "module": ".home.bella-xia.auto-testing.auto_minium.test8_check_taint_coverage.minium_tests.mini_taint_test",
    "package": "minium_tests",
    "failed_line_num": -1,
    "device": {
        "system_info": {
            "model": "iPhone 5",
            "pixelRatio": 2,
            "windowWidth": 320,
            "windowHeight": 520,
            "system": "iOS 10.0.1",
            "language": "zh_CN",
            "version": "8.0.5",
            "deviceOrientation": "portrait",
            "screenWidth": 320,
            "screenHeight": 568,
            "SDKVersion": "3.4.3",
            "brand": "devtools",
            "fontSizeSetting": 16,
            "benchmarkLevel": 1,
            "batteryLevel": 59,
            "statusBarHeight": 20,
            "bluetoothEnabled": true,
            "locationEnabled": true,
            "wifiEnabled": true,
            "cameraAuthorized": true,
            "locationAuthorized": true,
            "microphoneAuthorized": true,
            "notificationAuthorized": true,
            "safeArea": {
                "top": 20,
                "left": 0,
                "right": 320,
                "bottom": 568,
                "width": 320,
                "height": 548
            },
            "platform": "devtools",
            "enableDebug": false,
            "devicePixelRatio": 2,
            "host": {
                "env": "WeChat"
            },
            "mode": "default"
        }
    },
    "log_filename": "run.log",
    "error_type": "",
    "error_value": "",
    "error_stages": [],
    "screen_info": [
        {
            "name": "setup",
            "url": "/pages/index/index",
            "path": "images/setup.png",
            "ts": 1716498682,
            "datetime": "2024-05-23 17:11:22"
        },
        {
            "name": "teardown",
            "url": "/pages/nearby-shop/nearby-shop",
            "path": "images/teardown.png",
            "ts": 1716500123,
            "datetime": "2024-05-23 17:35:23"
        }
    ],
    "step_info": [],
    "check_list": [],
    "assert_list": [],
    "perf_data": "{\"startup\": 0, \"avg_cpu\": 0, \"max_cpu\": 0, \"cpu_data_list\": [], \"avg_mem\": 0, \"max_mem\": 0, \"mem_data_list\": [], \"avg_fps\": 0, \"min_fps_rt\": 0, \"fps_data_list\": [], \"fps_time_series_list\": [], \"cpu_time_series_list\": [], \"mem_time_series_list\": []}",
    "weapp_log_path": "weapp.log",
    "request_log_path": "request.log",
    "stop_timestamp": 1716500123.753683,
    "appId": "",
    "appName": "",
    "source": {
        "code": [
            "    def test_input_coverage(self):\n",
            "        text_input = \"string\"\n",
            "        pages = self.app.get_all_pages_path()\n",
            "\n",
            "        for page in pages:\n",
            "            self.open_route(\"/\" + page)\n",
            "            self.page.wait_for(5)\n",
            "            inputs = self.page.get_elements(\"input\")\n",
            "            input_method_calls = []\n",
            "            print(f\"there are {len(inputs)} elements on page {page}\")\n",
            "            for input_block in inputs:\n",
            "                try:\n",
            "                    input_call_result = self.hook_wx_methods_with_formelement_binds(input_block, text_input, self.wx_methods, is_form=False)\n",
            "                    input_method_calls.append(input_call_result)\n",
            "                except Exception as e:\n",
            "                    print(f'encountering error during input query: {e}')\n",
            "            self.coverage.append({'page': page,\n",
            "                                  'method': \"bindchange\",\n",
            "                                  'callback results': input_method_calls})\n",
            "            self.app.navigate_back()\n"
        ],
        "start": 33
    },
    "filename": "result.json"
}