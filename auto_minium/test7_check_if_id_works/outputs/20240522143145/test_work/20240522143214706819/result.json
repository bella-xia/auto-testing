{
    "case_name": "test_work",
    "run_time": "20240522 14:32:14",
    "test_type": "baseTest",
    "case_doc": null,
    "success": true,
    "failures": "",
    "errors": "",
    "start_timestamp": 1716402734.8901174,
    "is_failure": false,
    "is_error": false,
    "module": ".home.bella-xia.auto-testing.auto_minium.test7_check_if_id_works.tests",
    "package": "tests",
    "failed_line_num": -1,
    "device": {
        "system_info": {
            "model": "iPhone 5",
            "pixelRatio": 2,
            "windowWidth": 320,
            "windowHeight": 504,
            "system": "iOS 10.0.1",
            "language": "zh_CN",
            "version": "8.0.5",
            "deviceOrientation": "portrait",
            "screenWidth": 320,
            "screenHeight": 568,
            "SDKVersion": "3.4.3",
            "brand": "devtools",
            "fontSizeSetting": 16,
            "benchmarkLevel": 1,
            "batteryLevel": 55,
            "statusBarHeight": 20,
            "bluetoothEnabled": true,
            "locationEnabled": true,
            "wifiEnabled": true,
            "cameraAuthorized": true,
            "locationAuthorized": true,
            "microphoneAuthorized": true,
            "notificationAuthorized": true,
            "safeArea": {
                "top": 20,
                "left": 0,
                "right": 320,
                "bottom": 568,
                "width": 320,
                "height": 548
            },
            "platform": "devtools",
            "enableDebug": false,
            "devicePixelRatio": 2,
            "host": {
                "env": "WeChat"
            },
            "mode": "default"
        }
    },
    "log_filename": "run.log",
    "error_type": "",
    "error_value": "",
    "error_stages": [],
    "screen_info": [
        {
            "name": "setup",
            "url": "/pages/shop/index/index",
            "path": "images/setup.png",
            "ts": 1716402734,
            "datetime": "2024-05-22 14:32:14"
        },
        {
            "name": "teardown",
            "url": "/pages/shop/index/index",
            "path": "images/teardown.png",
            "ts": 1716402745,
            "datetime": "2024-05-22 14:32:25"
        }
    ],
    "step_info": [],
    "check_list": [],
    "assert_list": [],
    "perf_data": "{\"startup\": 0, \"avg_cpu\": 0, \"max_cpu\": 0, \"cpu_data_list\": [], \"avg_mem\": 0, \"max_mem\": 0, \"mem_data_list\": [], \"avg_fps\": 0, \"min_fps_rt\": 0, \"fps_data_list\": [], \"fps_time_series_list\": [], \"cpu_time_series_list\": [], \"mem_time_series_list\": []}",
    "weapp_log_path": "weapp.log",
    "request_log_path": "request.log",
    "stop_timestamp": 1716402745.0323205,
    "appId": "",
    "appName": "",
    "source": {
        "code": [
            "    def test_work(self):\n",
            "        is_exception_thrown = threading.Semaphore(0)  # \u76d1\u542c\u56de\u8c03, \u963b\u585e\u5f53\u524d\u4e3b\u7ebf\u7a0b\n",
            "        e = None\n",
            "        def on_exception(err):\n",
            "            nonlocal e\n",
            "            is_exception_thrown.release()\n",
            "            e = err\n",
            "\n",
            "        self.app.on_exception_thrown(on_exception)\n",
            "        try:\n",
            "            # print(self.mini.get_system_info())\n",
            "            self.app.navigate_to(self.app.get_current_page())  # \u8fdb\u5165\u9875\u9762\u4f1athrow error\n",
            "        except:\n",
            "            pass\n",
            "        if is_exception_thrown.acquire(timeout=10) is True:\n",
            "            write_to_file(f\"get exception when loading into the page: {e}\", 'test_result_log.txt')\n",
            "        # self.assertTrue(, \"\u76d1\u542c\u5230\u62a5\u9519\")\n",
            "        # self.assertTrue(is_exception_thrown.acquire(timeout=10), \"\u76d1\u542c\u5230\u7b2c\u4e8c\u6b21\u62a5\u9519\")\n",
            "        # self.assertEqual(e.message, \"thisonload is not defined\")\n",
            "        # self.assertIsNotNone(e.stack, \"stack not empty\")\n"
        ],
        "start": 6
    },
    "filename": "result.json"
}